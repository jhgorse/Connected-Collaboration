Items marked with a ★ are high priority

* Network communication
 ★ Timeout quickly on unimportant messages
 ★ One-way messages (such as END_CALL) should be sent asynchronously
 ★ Pause/resume calls correctly
 - Retry sending of important messages

* Asynchronous
 - Network communication is blocking and synchronous internally. Some of that
   should be asynchronous (it's all run in a separate thread so not a big issue
   right now)
 ★ For example, replies to incoming queries should definitely be asynchronous.

* Error handling
 - We need to define our own GErrors and pass them around in the API. Currently,
   we just pass around NULL. The machinery is in place, so should be
   straighforward. Because we don't do this, we don't check the set GError at
   all and leak GErrors.
 - Need ERROR types in the network protocol itself so the negotiator and/or
   peers can take appropriate corrective action instead of just aborting the
   negotiation process or the call.

* General
 - Add the ability for any peer to add other peers to an existing call
 - Test and bugfix removal/timeout of individual remote peers in a multi-party
   call
 - Allow peers to gracefully degrade a call; reducing video res or removing it
   altogether
   + Infrastructure is there (set_video_quality). Need to expose call statistics
     so applications can know when to use it.

* Audio echo cancellation
 - Works, but uses an environment variable right now. Should ideally set
   pulsesrc/sink properties.
   
* Device probing/monitoring
 - GstDeviceMonitor API does not have a way to query whether a device is under
   use. Currently, we try to use the device and fail, but we should fix the API.
 - OS X support (avfvideosrc)

* GUI:
 - Add a full-screen mode
